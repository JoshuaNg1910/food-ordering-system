generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customer {
  customerId    String   @id @default(uuid())
  firstName     String   @db.VarChar(255)
  lastName      String   @db.VarChar(255)
  username      String   @unique @db.VarChar(20)
  password      String   @db.VarChar(255)
  email         String   @unique @db.VarChar(255)
  phoneNo       String   @db.VarChar(15)
  active        Int      @default(1) @db.TinyInt
  lastLogin     DateTime @db.Timestamp(0)
  loginAttempts Int
  orders        orders[]
}

model orders {
  ordersId        String        @id @default(uuid())
  customerId      String        @db.Char(36)
  timestamp       DateTime      @db.Timestamp(0)
  status          orders_status
  deliveryAddress String        @db.VarChar(255)
  orderitems      orderitems[]
  customer        customer      @relation(fields: [customerId], references: [customerId])

  @@index([customerId], map: "orders_customerId_fkey")
}

model seller {
  sellerId      String   @id @default(uuid())
  firstName     String   @db.VarChar(255)
  lastName      String   @db.VarChar(255)
  username      String   @unique @db.VarChar(20)
  password      String   @db.VarChar(255)
  email         String   @unique @db.VarChar(255)
  active        Int      @default(1) @db.TinyInt
  lastLogin     DateTime @db.Timestamp(0)
  loginAttempts Int
  phoneNo       String   @db.VarChar(15)
}

model menucategory {
  menuCategoryId Int        @id @default(autoincrement())
  image          String?    @db.VarChar(255)
  name           String     @db.VarChar(255)
  menuitem       menuitem[]
}

model menuitem {
  menuItemId     String       @id @default(uuid())
  image          String?      @db.VarChar(255)
  price          Decimal      @db.Decimal(10, 2)
  name           String       @db.VarChar(255)
  popular        Int          @default(0) @db.TinyInt
  menuCategoryId Int
  menucategory   menucategory @relation(fields: [menuCategoryId], references: [menuCategoryId], map: "menuItem_menuCategoryId_fkey")
  orderitems     orderitems[]

  @@index([menuCategoryId], map: "menuItem_menuCategoryId_fkey")
}

model orderitems {
  ordersId   String   @db.Char(36)
  menuItemId String   @db.Char(36)
  quantity   Int
  totalPrice Decimal  @db.Decimal(10, 2)
  menuitem   menuitem @relation(fields: [menuItemId], references: [menuItemId], map: "orderItems_menuItemId_fkey")
  orders     orders   @relation(fields: [ordersId], references: [ordersId], map: "orderItems_ordersId_fkey")

  @@id([ordersId, menuItemId])
  @@index([menuItemId], map: "orderItems_menuItemId_fkey")
}

enum orders_status {
  pending
  confirmed
  delivered
}
